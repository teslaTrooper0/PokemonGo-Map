syntax = "proto3";

package RpcSub;

import "RpcEnum.proto";

message GetPlayerResponse {
    int32 unknown1 = 1;
    Profile profile = 2;
}

message Profile {
  int64 creation_time = 1;
  string username = 2;
  RpcEnum.TeamColor team = 5;
  bytes tutorial = 7; 
  AvatarDetails avatar = 8; 
  int32 poke_storage = 9;
  int32 item_storage = 10;
  DailyBonus daily_bonus = 11;
  bytes unknown12 = 12;
  bytes unknown13 = 13;
  repeated Currency currency = 14;
}

message DailyBonus {
  int64 NextCollectTimestampMs = 1;
  int64 NextDefenderBonusCollectTimestampMs = 2;
}

message Currency {
  string type = 1;
  int32 amount = 2;
}

message AvatarDetails {
  int32 unknown2 = 2;
  int32 unknown3 = 3;
  int32 unknown9 = 9;
  int32 unknown10 = 10;
}

message DownloadSettingsRequest {
  string hash = 1;
}

message GetInventoryResponse {
  bool success = 1;
  InventoryDelta inventory_delta = 2;
}

message InventoryDelta {
  int64 original_timestamp_ms = 1;
  int64 new_timestamp_ms = 2;
  repeated InventoryItem inventory_items = 3;
}

message InventoryItem {
  int64 modified_timestamp_ms = 1;
  int64 deleted_item_key = 2;
  InventoryItemData inventory_item_data = 3;
}

message InventoryItemData {
  Pokemon pokemon = 1;
  Item item = 2;
  PokedexEntry pokedex_entry = 3;
  PlayerStats player_stats = 4;
  PlayerCurrency player_currency = 5;
  PlayerCamera player_camera = 6;
  InventoryUpgrades inventory_upgrades = 7;
  AppliedItems applied_items = 8;
  EggIncubators egg_incubators = 9;
  PokemonFamily pokemon_family = 10;
}

message Pokemon {
  int32 id = 1;
  RpcEnum.PokemonId pokemon_type = 2;
  int32 cp = 3;
  int32 stamina = 4;
  int32 stamina_max = 5;
  RpcEnum.PokemonMove move_1 = 6;
  RpcEnum.PokemonMove move_2 = 7;
  int32 deployed_fort_id = 8;
  string owner_name = 9;
  bool is_egg = 10;
  int32 egg_km_walked_target = 11;
  int32 egg_km_walked_start = 12;
  int32 origin = 14;
  float height_m = 15;
  float weight_kg = 16;
  int32 individual_attack = 17;
  int32 individual_defense = 18;
  int32 individual_stamina = 19;
  int32 cp_multiplier = 20;
  int32 pokeball = 21;
  uint64 captured_cell_id = 22;
  int32 battles_attacked = 23;
  int32 battles_defended = 24;
  int32 egg_incubator_id = 25;
  uint64 creation_time_ms = 26;
  int32 num_upgrades = 27;
  int32 additional_cp_multiplier = 28;
  int32 favorite = 29;
  string nickname = 30;
  int32 from_fort = 31;
}

message Item {
  RpcEnum.ItemType item = 1;
  int32 count = 2;
  bool unseen = 3;
}

message PokedexEntry {
  int32 pokedex_entry_number = 1;
  int32 times_encountered = 2;
  int32 times_captured = 3;
  int32 evolution_stone_pieces = 4;
  int32 evolution_stones = 5;
}

message PlayerStats {
  int32 level = 1;
  int64 experience = 2;
  int64 prev_level_xp = 3;
  int64 next_level_xp = 4;
  float km_walked = 5;
  int32 pokemons_encountered = 6;
  int32 unique_pokedex_entries = 7;
  int32 pokemons_captured = 8;
  int32 evolutions = 9;
  int32 poke_stop_visits = 10;
  int32 pokeballs_thrown = 11;
  int32 eggs_hatched = 12;
  int32 big_magikarp_caught = 13;
  int32 battle_attack_won = 14;
  int32 battle_attack_total = 15;
  int32 battle_defended_won = 16;
  int32 battle_training_won = 17;
  int32 battle_training_total = 18;
  int32 prestige_raised_total = 19;
  int32 prestige_dropped_total = 20;
  int32 pokemon_deployed = 21;
  bytes pokemon_caught_by_type = 22; // TODO: repeated PokemonType ??
  int32 small_rattata_caught = 23;
}

message PlayerCurrency {
  int32 gems = 1;
}

message PlayerCamera {
  bool is_default_camera = 1;
}

message InventoryUpgrades {
  repeated InventoryUpgrade inventory_upgrades = 1;
}

message InventoryUpgrade {
  RpcEnum.ItemType item = 1;
  RpcEnum.InventoryUpgradeType upgrade_type = 2;
  int32 additional_storage = 3;
}

message AppliedItems {
  AppliedItem item = 4;
}

message AppliedItem {
  RpcEnum.ItemType item_type = 1;
  RpcEnum.ItemTypeCategory item_type_category = 2;
  int64 expire_ms = 3;
  int64 applied_ms = 4;
}

message EggIncubators {
  EggIncubator egg_incubator = 1;
}

message EggIncubator {
  string item_id = 1;
  RpcEnum.ItemType item_type = 2;
  RpcEnum.EggIncubatorType incubator_type = 3;
  int32 uses_remaining = 4;
  int64 pokemon_id = 5; // TODO: Check if is PokemonType
  double start_km_walked = 6;
  double target_km_walked = 7;
}

message PokemonFamily {
  RpcEnum.PokemonFamilyId family_id = 1;
  int32 candy = 2;
}

message GetMapObjectsRequest {
  bytes  cell_id = 1;
  bytes since_timestamp_ms = 2;
  double latitude = 3;
  double longitude = 4;
}

message GetMapObjectsResponse {
  repeated MapCell map_cells = 1;
  RpcEnum.MapObjectsStatus status = 2;
}

message MapCell {
  // S2 geographic area that the cell covers (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
  uint64 s2_cell_id = 1;
  int64 current_timestamp_ms = 2;
  repeated FortData forts = 3;
  repeated SpawnPoint spawn_points = 4;
  repeated string deleted_objects = 6;
  bool is_truncated_list = 7;
  repeated FortSummary fort_summaries = 8;
  repeated SpawnPoint decimated_spawn_points = 9;

  // Pokemon within 2 steps or less.
  repeated WildPokemon wild_pokemons = 5;
  // Pokemon within 1 step or none.
  repeated MapPokemon catchable_pokemons = 10;
  // Pokemon farther away than 2 steps, but still in the area.
  repeated NearbyPokemon nearby_pokemons = 11;
}

message FortData {
  string id = 1;
  int64 last_modified_timestamp_ms = 2;
  double latitude = 3;
  double longitude = 4;
  bool enabled = 8;
  RpcEnum.FortType type = 9;

  //// Fields related to gyms only

  // Team that owns the gym
  RpcEnum.TeamColor owned_by_team = 5;

  // Highest CP Pokemon at the gym
  RpcEnum.PokemonId guard_pokemon_id = 6;
  int32 guard_pokemon_cp = 7;

  // Prestigate / experience of the gym
  int64 gym_points = 10;

  // Whether someone is battling at the gym currently
  bool is_in_battle = 11;

  //// Fields related to pokestops only

  // Timestamp when the pokestop can be activated again to get items / xp
  int64 cooldown_complete_timestamp_ms = 14;

  RpcEnum.FortSponsor sponsor = 15;
  RpcEnum.FortRenderingType rendering_type = 16;

  // Might represent the type of item applied to the pokestop, right now only lures can be applied
  bytes active_fort_modifier = 12;
  FortLureInfo lure_info = 13;
}

message FortLureInfo {
  string fort_id = 1;
  double unknown2 = 2;
  RpcEnum.PokemonId active_pokemon_id = 3;
  int64 lure_expires_timestamp_ms = 4;
}

message SpawnPoint {
  double latitude = 2;
  double longitude = 3;
}

message FortSummary {
  int32 fort_summary_id = 1;
  int32 last_modified_timestamp_ms = 2;
  int32 latitude = 3;
  int32 longitude = 4;
}

message WildPokemon {
  fixed64 encounter_id = 1;
  int64 last_modified_timestamp_ms = 2;
  double latitude = 3;
  double longitude = 4;
  string spawnpoint_id = 5;
  PokemonData pokemon_data = 7;
  int32 time_till_hidden_ms = 11;
}

message PokemonData {
  int32 id = 1;
  RpcEnum.PokemonId pokemon_id = 2;
  int32 cp = 3;
  int32 stamina = 4;
  int32 stamina_max = 5;
  RpcEnum.PokemonMove move_1 = 6;
  RpcEnum.PokemonMove move_2 = 7;
  int32 deployed_fort_id = 8;
  string owner_name = 9;
  bool is_egg = 10;
  int32 egg_km_walked_target = 11;
  int32 egg_km_walked_start = 12;
  int32 origin = 14;
  float height_m = 15;
  float weight_kg = 16;
  int32 individual_attack = 17;
  int32 individual_defense = 18;
  int32 individual_stamina = 19;
  int32 cp_multiplier = 20;
  int32 pokeball = 21;
  uint64 captured_cell_id = 22;
  int32 battles_attacked = 23;
  int32 battles_defended = 24;
  int32 egg_incubator_id = 25;
  uint64 creation_time_ms = 26;
  int32 num_upgrades = 27;
  int32 additional_cp_multiplier = 28;
  int32 favorite = 29;
  string nickname = 30;
  int32 from_fort = 31;
}

message MapPokemon {
  string spawnpoint_id = 1;
  fixed64 encounter_id = 2;
  RpcEnum.PokemonId pokemon_id = 3;
  // After this timestamp, the pokemon will be gone.
  int64 expiration_timestamp_ms = 4;
  double latitude = 5;
  double longitude = 6;
}

message NearbyPokemon {
  RpcEnum.PokemonId pokemon_id = 1;
  float distance_in_meters = 2;
  fixed64 encounter_id = 3;
}

message DownloadSettingsResponse {
  string error = 1;
  string hash = 2;
  GlobalSettings settings = 3;
}

message GlobalSettings {
  FortSettings fort_settings = 2;
  MapSettings map_settings = 3;
  LevelSettings level_settings = 4;
  InventorySettings inventory_settings = 5;
  string minimum_client_version = 6;
}

message FortSettings {
  double interaction_range_meters = 1;
  int32 max_total_deployed_pokemon = 2;
  int32 max_player_deployed_pokemon = 3;
  double deploy_stamina_multiplier = 4;
  double deploy_attack_multiplier = 5;
  double far_interaction_range_meters = 6;
}

message MapSettings {
  double pokemon_visible_range = 1;
  double poke_nav_range_meters = 2;
  double encounter_range_meters = 3;
  float get_map_objects_min_refresh_seconds = 4;
  float get_map_objects_max_refresh_seconds = 5;
  float get_map_objects_min_distance_meters = 6;
  string google_maps_api_key = 7;
}

message LevelSettings {
  double trainer_cp_modifier = 2;
  double trainer_difficulty_modifier = 3;
}

message InventorySettings {
  int32 max_pokemon = 1;
  int32 max_bag_items = 2;
  int32 base_pokemon = 3;
  int32 base_bag_items = 4;
  int32 base_eggs = 5;
}
